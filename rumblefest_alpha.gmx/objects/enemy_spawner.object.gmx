<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Define initial order of enemy spawning

enemyToSpawn = "obj_en_red"
enemySpawnX = (room_width / 2)
enemySpawnY = 42

// Define arrays of enemy objects and timing (in seconds) that they should spawn in
// Have to use two arrays since key/value pairs are a PITA in game maker
// Also why can't I just have an array I can .pop() on...
listIndex = 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="1">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Actually spawn the enemy
instance_create(enemySpawnX, enemySpawnY, asset_get_index(enemyToSpawn));

// Call alarm[0] again if we still have enemies 
if (ds_list_size(enemyList) &gt; 0) {
    listIndex++
    alarm[0] = 1
} else {
    // debug, keep adding more
    ds_list_add(enemyList, 
        "obj_generic_walkin", 
        "obj_generic_walkin", 
        "obj_generic_walkin",
        "obj_generic_walkin",
        "obj_generic_walkin")
        
    ds_list_add(timingList, 
        4,
        4, 
        4, 
        4,
        4)
        
    alarm[0] = 1
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Pop off of arrays, spawn enemy, then call this alarm again after specified time 

enemyToSpawn = ds_list_find_value(enemyList, 0)
time = ds_list_find_value(timingList, 0)

alarm[1] = room_speed * time

ds_list_delete(enemyList, 0)
ds_list_delete(timingList, 0)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Call alarm to set up chain of spawning enemies for first time
enemyList = ds_list_create()
timingList = ds_list_create()

ds_list_add(enemyList, 
    "obj_generic_walkin", 
    "obj_generic_walkin", 
    "obj_generic_walkin",
    "obj_generic_walkin",
    "obj_generic_walkin")
    
ds_list_add(timingList, 
    .1,
    5, 
    5, 
    5,
    10)

    
alarm[0] = 1
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
